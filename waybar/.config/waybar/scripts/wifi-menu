#!/usr/bin/env bash

notify-send "Wi-Fi scan..." "Getting network list..." &

# Icons
SCAN_ICON="󰐷   Scan"
WIFI_ON_ICON="Disable Wi-Fi"
WIFI_OFF_ICON="Enable Wi-Fi"
CHECKMARK_ICON="󰄬 "

# Check Wi-Fi status
wifi_status=$(nmcli radio wifi)
TOGGLE_WIFI=$([[ "$wifi_status" == "enabled" ]] && echo "$WIFI_ON_ICON" || echo "$WIFI_OFF_ICON")

# Rescan networks
nmcli device wifi rescan > /dev/null 2>&1
sleep 1

# Get currently connected SSID
connected_ssid=$(nmcli -t -f ACTIVE,SSID device wifi | grep '^yes' | cut -d':' -f2)

# Build SSID list
declare -A seen_ssids
ssid_menu=()
ssid_raw=()

while IFS= read -r -d '' line; do
    ssid=$(echo "$line" | cut -d'|' -f1)
    signal=$(echo "$line" | cut -d'|' -f2)

    # Skip hidden or empty SSIDs
    if [[ -z "$ssid" || "$ssid" == "--" ]]; then
        continue
    fi

    # Skip duplicates
    if [[ -n "${seen_ssids[$ssid]}" ]]; then
        continue
    fi
    seen_ssids["$ssid"]=1

    # Choose signal icon
    if (( signal == 100 )); then
        icon="󰤨   "
    elif (( signal >= 76 )); then
        icon="󰤥   "
    elif (( signal >= 51 )); then
        icon="󰤢   "
    elif (( signal >= 26 )); then
        icon="󰤟   "
    else
        icon="󰤯   "
    fi

    # Build menu item
    display_ssid="$icon $ssid"
    if [[ "$ssid" == "$connected_ssid" ]]; then
        display_ssid="$CHECKMARK_ICON $icon $ssid"
    fi

    ssid_menu+=("$display_ssid")
    ssid_raw+=("$ssid")
done < <(nmcli -t -f SSID,SIGNAL device wifi list | awk 'NR>1' | awk -F: '{OFS="|"; print $1, $2}' | tr '\n' '\0')

# Final menu
SPACER="───────── Available networks ──────────"
menu_items=("$SCAN_ICON" "$TOGGLE_WIFI" "$SPACER" "${ssid_menu[@]}")
selection=$(printf '%s\n' "${menu_items[@]}" | rofi -dmenu -p "Network Manager:" -theme-str 'inputbar { enabled: false; } listview { spacing: 6px; } mainbox { children: [listview]; } window { width: 510px; height: 530px; }' | makoctl dismiss)


# Handle selection
case "$selection" in
    "$SCAN_ICON")
        nmcli device wifi rescan > /dev/null 2>&1
        exec "$0"
        ;;
    "$WIFI_ON_ICON")
        nmcli radio wifi off
        ;;
    "$WIFI_OFF_ICON")
        nmcli radio wifi on
        exec "$0"
        ;;
    "")
        exit
        ;;
    *)
        # Match the selected display item to the SSID
        match_index=-1
        for i in "${!ssid_menu[@]}"; do
            if [[ "${ssid_menu[$i]}" == "$selection" ]]; then
                match_index=$i
                break
            fi
        done

        if [[ $match_index -eq -1 ]]; then
            notify-send "Error" "Could not find SSID match for selection."
            exit 1
        fi

        ssid_selected="${ssid_raw[$match_index]}"

        # Delete existing connection (if any)
        nmcli connection delete id "$ssid_selected" > /dev/null 2>&1

        # Prompt for password
        password=$(rofi -dmenu -p "Enter Password for $ssid_selected:" -password)
        if [[ -z "$password" ]]; then
            notify-send "Connection Failed" "Password is required to connect to $ssid_selected."
            exit
        fi

        # Connect
        nmcli device wifi connect "$ssid_selected" password "$password" || {
            notify-send "Connection Failed" "Failed to connect to $ssid_selected."
            exit
        }
        ;;
esac
